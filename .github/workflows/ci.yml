name: CI Pipeline
# on:
#   pull_request:
#     branches:
#       - main
#   push:
#     branches:
#       - main

on:
  pull_request:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker compose -f docker-compose.yml -f docker-compose.gh.actions.yml up --build -d

      - name: Wait for Services to be Ready
        run: |
          echo "Waiting for services to start..."
          sleep 10  # Adjust based on startup time

      - name: Run Backend Tests
        run: docker compose exec flask-app pytest

      - name: Run Playwright Tests
        run: docker compose exec playwright-tests npx playwright test --debug

      - name: Capture Logs on Failure
        if: failure()
        run: |
          echo "Capturing logs due to failure..."
          docker compose logs flask-app > flask-app.log
          docker compose logs vue-frontend > vue-frontend.log
          docker compose logs playwright-tests > playwright-tests.log
          cat flask-app.log
          cat vue-frontend.log
          cat playwright-tests.log

      - name: Stop and Clean up Docker
        run: docker compose down -v
